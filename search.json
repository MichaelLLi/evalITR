[{"path":"/articles/install.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installation","text":"can install released version evalITR CRAN : , can install development version evalITR GitHub : want use latest version package, can install development version evalITR specifying branch name devtools::install_github.","code":"# Install release version from CRAN (updating evalITR is the same command) install.packages(\"evalITR\") # install.packages(\"devtools\") devtools::install_github(\"MichaelLLi/evalITR\", ref = \"causal-ml\")"},{"path":"/articles/install.html","id":"parallelization","dir":"Articles","previous_headings":"","what":"Parallelization","title":"Installation","text":"(Optional) multiple cores, recommendate using multisession futures processing parallel. increase computation efficiency reduce time fit model.","code":"library(furrr) library(future.apply)  # check the number of cores parallel::detectCores()  # set the number of cores nworkers <- 4 plan(multisession, workers =nworkers)"},{"path":"/articles/sample_split_caret.html","id":"train-the-model-with-caret","dir":"Articles","previous_headings":"","what":"Train the model with Caret","title":"Sample Splitting with Caret/SuperLearner","text":"can train model caret package (information caret, see original website). use parallel computing speed computation. following example shows estimate ITR gradient boosting machine (GBM) using caret package. Note already loaded data specify treatment, outcome, covariates shown Sample Splitting vignette. Since using caret package, need specify trainControl /tuneGrid arguments. trainControl argument specifies cross-validation method tuneGrid argument specifies tuning grid. information arguments, please refer caret website. estimate ITR one machine learning algorithm (GBM) evaluate ITR evaluate_itr() function. compute PAPDp, need specify algorithms argument 2 machine learning algorithms. can extract training model caret check model performance. functions caret can applied training model.","code":"# parallel computing library(doParallel) cl <- makePSOCKcluster(5) registerDoParallel(cl)  # stop after finishing the computation stopCluster(cl) library(evalITR) library(caret)  # specify the trainControl method fitControl <- caret::trainControl(   method = \"repeatedcv\", # 3-fold CV   number = 3, # repeated 3 times   repeats = 3,   search='grid',   allowParallel = TRUE) # grid search  # specify the tuning grid gbmGrid <- expand.grid(   interaction.depth = c(1, 5, 9),    n.trees = (1:30)*50,    shrinkage = 0.1,   n.minobsinnode = 20)  # estimate ITR fit_caret <- estimate_itr(   treatment = \"treatment\",   form = user_formula,   trControl = fitControl,   data = star_data,   algorithms = c(\"gbm\"),   budget = 0.2,   split_ratio = 0.7,   tuneGrid = gbmGrid,   verbose = FALSE) #> Evaluate ITR under sample splitting ...  # evaluate ITR est_caret <- evaluate_itr(fit_caret) #> Cannot compute PAPDp # extract the final model caret_model <- fit_caret$estimates$models$gbm print(caret_model$finalModel) #> A gradient boosted model with gaussian loss function. #> 100 iterations were performed. #> There were 53 predictors of which 24 had non-zero influence.  # check model performance trellis.par.set(caretTheme()) # theme plot(caret_model) # heatmap  plot(   caret_model,    plotType = \"level\",   scales = list(x = list(rot = 90)))"},{"path":"/articles/sample_split_caret.html","id":"train-the-model-with-superlearner","dir":"Articles","previous_headings":"","what":"Train the model with SuperLearner","title":"Sample Splitting with Caret/SuperLearner","text":"Alternatively, can train model SuperLearner package (information SuperLearner, see original website). SuperLearner utilizes ensemble method taking optimal weighted average multiple machine learning algorithms improve model performance. compare performance ITR estimated causal_forest SuperLearner. plot estimated Area Prescriptive Effect Curve writing score across range budget constraints, seperately two ITRs, estimated causal_forest SuperLearner.","code":"library(SuperLearner)  fit_sl <- estimate_itr(   treatment = \"treatment\",   form = user_formula,   data = star_data,   algorithms = c(\"causal_forest\",\"SuperLearner\"),   budget = 0.2,   split_ratio = 0.7,   SL_library = c(\"SL.ranger\", \"SL.glmnet\")) #> Evaluate ITR under sample splitting ...  est_sl <- evaluate_itr(fit_sl)  # summarize estimates summary(est_sl) #> -- PAPE ------------------------------------------------------------------------ #>   estimate std.deviation     algorithm statistic p.value #> 1      1.9           1.4 causal_forest       1.4    0.17 #> 2      2.3           1.4  SuperLearner       1.6    0.11 #>  #> -- PAPEp ----------------------------------------------------------------------- #>   estimate std.deviation     algorithm statistic p.value #> 1      1.8           1.1 causal_forest       1.6   0.112 #> 2      2.1           1.2  SuperLearner       1.8   0.071 #>  #> -- PAPDp ----------------------------------------------------------------------- #>   estimate std.deviation                    algorithm statistic p.value #> 1     -0.3          0.97 causal_forest x SuperLearner     -0.31    0.76 #>  #> -- AUPEC ----------------------------------------------------------------------- #>   estimate std.deviation     algorithm statistic p.value #> 1      1.5           1.0 causal_forest       1.5    0.14 #> 2      1.6           1.1  SuperLearner       1.5    0.14 #>  #> -- GATE ------------------------------------------------------------------------ #>    estimate std.deviation     algorithm group statistic p.value upper lower #> 1      -172           107 causal_forest     1     -1.61    0.11  -347     4 #> 2      -145           108 causal_forest     2     -1.35    0.18  -323    32 #> 3       102           109 causal_forest     3      0.94    0.35   -76   281 #> 4       142           109 causal_forest     4      1.31    0.19   -37   321 #> 5       103           108 causal_forest     5      0.95    0.34   -76   281 #> 6       -59           108  SuperLearner     1     -0.55    0.58  -237   118 #> 7       -79           107  SuperLearner     2     -0.73    0.46  -255    98 #> 8        36           109  SuperLearner     3      0.33    0.74  -143   214 #> 9        28           108  SuperLearner     4      0.26    0.79  -150   207 #> 10      104           109  SuperLearner     5      0.95    0.34   -75   283 # plot the AUPEC  plot(est_sl)"},{"path":"/articles/user_itr_algs.html","id":"estimated-vs--user-defined-itr","dir":"Articles","previous_headings":"","what":"Estimated vs. User Defined ITR","title":"Compare Estimated and User Defined ITR","text":"package allows compare performance estimated ITRs user defined ITRs. estimate_itr function takes following arguments: function returns object contains estimated GATE, ATE, AUPEC user defined ITR. plot estimated Area Prescriptive Effect Curve (AUPEC) writing score across range budget constraints user defined ITR estimated ITRs. plot shows estimated ITRs better performance user defined ITR.","code":"# estimate ITR  fit <- estimate_itr(   treatment = \"T\",   form = user_formula,   data = star_data,   algorithms = c(\"causal_forest\"),   budget = 0.2,   split_ratio = 0.7) #> Evaluate ITR under sample splitting ...  # user's own ITR score_function <- function(data){   data %>%      mutate(score = case_when(       school_urban == 1 ~ 0.1, # inner-city       school_urban == 2 ~ 0.2, # suburban       school_urban == 3 ~ 0.4, # rural       school_urban == 4 ~ 0.3, # urban     )) %>%     pull(score) -> score        return(score) }  # evalutate ITR compare_itr <- evaluate_itr(   fit = fit,   user_itr = score_function,   data = star_data,   treatment = \"T\",   outcome = outcomes,   budget = 0.2) #> Cannot compute PAPDp  # summarize estimates summary(compare_itr) #> -- PAPE ------------------------------------------------------------------------ #>   estimate std.deviation     algorithm statistic p.value #> 1      1.5          0.99 causal_forest       1.5    0.13 #> 2      0.0          0.00      user_itr       NaN     NaN #>  #> -- PAPEp ----------------------------------------------------------------------- #>   estimate std.deviation     algorithm statistic p.value #> 1     0.83          1.20 causal_forest      0.69    0.49 #> 2     1.06          0.67      user_itr      1.58    0.11 #>  #> -- PAPDp ----------------------------------------------------------------------- #> Cannot compute PAPDp #>  #> -- AUPEC ----------------------------------------------------------------------- #>   estimate std.deviation     algorithm statistic p.value #> 1     2.13          0.89 causal_forest       2.4   0.017 #> 2    -0.91          0.42          <NA>      -2.2   0.028 #>  #> -- GATE ------------------------------------------------------------------------ #>    estimate std.deviation     algorithm group statistic p.value  upper lower #> 1       -47           108 causal_forest     1     -0.43   0.665 -224.8   131 #> 2      -216           107 causal_forest     2     -2.02   0.044 -392.1   -40 #> 3       -32           108 causal_forest     3     -0.30   0.765 -210.5   146 #> 4        74           108 causal_forest     4      0.68   0.494 -104.0   252 #> 5       228           108 causal_forest     5      2.12   0.034   51.4   405 #> 6       126            58      user_itr     1      2.16   0.031   30.2   222 #> 7        96            59      user_itr     2      1.62   0.105   -1.4   194 #> 8       -33            59      user_itr     3     -0.56   0.579 -129.7    64 #> 9      -139            59      user_itr     4     -2.36   0.018 -236.5   -42 #> 10      -32            59      user_itr     5     -0.54   0.589 -129.4    65 # plot the AUPEC  plot(compare_itr)"},{"path":"/articles/user_itr_algs.html","id":"existing-model-vs--user-defined-model","dir":"Articles","previous_headings":"","what":"Existing Model vs. User-Defined Model","title":"Compare Estimated and User Defined ITR","text":"package also allows compare performance estimated ITRs existing ML packages user defined models. following code shows example using causal forest grf package sample splitting. estimate_itr function takes following arguments: user_model input function takes two arguments: training_data test_data. function make use training_data fit model use test_data estimate CATE metrics interest. also specify way get ITR, based estimated effects. following example, fit linear model sample splitting use estimated CATE. compute ITR assigning treatment positive CATE treatment negative CATE. function user_model takes training data test data return list contains (1) ITR; (2) fitted model; (3) continuous score length input data. Note user defined model can model returns unit-level continuous score treatment assignment. linear model model estimate CATE. can specify custom functions train_model function fit_predict function compute score. model default predict function, need write custom function fit_predict. addition, can also choose scoring rule maps score binary indicator treatment assignment. split_ratio specified, function split data training test data. split_ratio numeric value 0 1. Alternatively, n_folds specified, function use entire data fit user defined model via cross-validation.","code":"# user-defined model user_model <- function(training_data, test_data){    # model fit on training data   fit <- train_model(training_data)      # estimate CATE on test data   compute_hatf <- function(fit, test_data){      score <- fit_predict(fit, test_data)       itr   <- score_function(score)          return(list(itr = itr, score = score))   }    hatf <- compute_hatf(fit, test_data)      return(list(     itr = hatf$itr,      fit = fit,      score = hatf$score)) } # train model train_model <- function(data){   fit <- lm(     Y ~ T*(cov1 + cov1 + cov3),      data = data)   return(fit) }  # predict function fit_predict <- function(fit, data){   # need to change this function if    # the model does not have a default predict function   score <- predict(fit, data)    return(score) } # score function score_function <- function(score){   itr <- (score >= 0) * 1   return(itr) } # estimate ITR compare_fit <- estimate_itr(   treatment = \"T\",   form = user_formula,   data = star_data,   algorithms = c(\"causal_forest\"),   budget = 0.2,   split_ratio = 0.7,   user_model = \"user_model\") #> Evaluate ITR under sample splitting ...   # evaluate ITR  compare_est <- evaluate_itr(compare_fit)  # summarize estimates summary(compare_est) #> -- PAPE ------------------------------------------------------------------------ #>   estimate std.deviation     algorithm statistic p.value #> 1      1.6           1.2 causal_forest       1.3     0.2 #> 2      0.0           0.0    user_model       NaN     NaN #>  #> -- PAPEp ----------------------------------------------------------------------- #>   estimate std.deviation     algorithm statistic p.value #> 1     2.60           1.2 causal_forest      2.14   0.032 #> 2     0.97           1.2    user_model      0.79   0.427 #>  #> -- PAPDp ----------------------------------------------------------------------- #>   estimate std.deviation                  algorithm statistic p.value #> 1      1.6           1.7 causal_forest x user_model      0.95    0.34 #>  #> -- AUPEC ----------------------------------------------------------------------- #>   estimate std.deviation     algorithm statistic p.value #> 1     2.35          0.98 causal_forest      2.40   0.016 #> 2    -0.57          0.88    user_model     -0.65   0.515 #>  #> -- GATE ------------------------------------------------------------------------ #>    estimate std.deviation     algorithm group statistic p.value upper lower #> 1        35           109 causal_forest     1      0.33 7.5e-01  -143   214 #> 2       145           109 causal_forest     2      1.34 1.8e-01   -34   324 #> 3        56           109 causal_forest     3      0.52 6.1e-01  -123   235 #> 4      -146           108 causal_forest     4     -1.35 1.8e-01  -322    31 #> 5       -72           107 causal_forest     5     -0.67 5.0e-01  -247   104 #> 6      -249           104    user_model     1     -2.39 1.7e-02  -421   -77 #> 7      -455           104    user_model     2     -4.39 1.1e-05  -625  -284 #> 8      -303           105    user_model     3     -2.88 4.0e-03  -477  -130 #> 9       316           110    user_model     4      2.88 4.0e-03   135   496 #> 10      711           109    user_model     5      6.51 7.4e-11   531   890 plot(compare_est)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Lingzhi Li. Author, maintainer. Kosuke Imai. Author. Jialu Li. Author. Xiaolong Yang. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li M, Imai K, Li J, Yang X (2023). evalITR: Evaluating Individualized Treatment Rules. https://github.com/MichaelLLi/evalITR, https://michaellli.github.io/evalITR/, https://jialul.github.io/causal-ml/.","code":"@Manual{,   title = {evalITR: Evaluating Individualized Treatment Rules},   author = {Michael Lingzhi Li and Kosuke Imai and Jialu Li and Xiaolong Yang},   year = {2023},   note = {https://github.com/MichaelLLi/evalITR, https://michaellli.github.io/evalITR/, https://jialul.github.io/causal-ml/}, }"},{"path":"/index.html","id":"evalitr-cran_status_badge-cran-downloads","dir":"","previous_headings":"","what":"evalITR","title":"Evaluating Individualized Treatment Rules","text":"R package evalITR provides various statistical methods estimating evaluating Individualized Treatment Rules randomized data. provided metrics include (1) population average prescriptive effect PAPE; (2) population average prescriptive effect budget constraint PAPEp; (3) population average prescriptive effect difference budget constraint PAPDp; (4) area prescriptive effect curve AUPEC; (5) Grouped Average Treatment Effects GATEs. details methods design given Imai Li (2023) Imai Li. Documentation website: https://michaellli.github.io/evalITR/","code":""},{"path":"/reference/AUPEC.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"function estimates AUPEC. details methods design given Imai Li (2019).","code":""},{"path":"/reference/AUPEC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"","code":"AUPEC(T, tau, Y, centered = TRUE)"},{"path":"/reference/AUPEC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"T vector unit-level binary treatment receipt variable sample. tau vector unit-level continuous score treatment assignment. assume tau<0 treatment. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/AUPEC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"list contains following items: aupec estimated Area Prescription Evaluation Curve sd estimated standard deviation AUPEC. vec vector points outlining AUPEC curve across possible budget point dataset. step increases budget 1/n n number data points.","code":""},{"path":"/reference/AUPEC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/AUPEC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/AUPEC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments — AUPEC","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7) Y = c(4,5,0,2,4,1,-4,3) aupeclist <- AUPEC(T,tau,Y) aupeclist$aupec #> [1] -0.5820312 aupeclist$sd #> [1] 0.7674225 aupeclist$vec #> [1]  0.59375 -0.87500 -0.65625 -0.12500 -0.15625 -0.62500 -1.40625 -1.40625"},{"path":"/reference/AUPECcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"function estimates AUPEC. details methods design given Imai Li (2019).","code":""},{"path":"/reference/AUPECcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"","code":"AUPECcv(T, tau, Y, ind, centered = TRUE)"},{"path":"/reference/AUPECcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"T vector unit-level binary treatment receipt variable sample. tau matrix ith column unit-level continuous score treatment assignment generated ith fold. Y outcome variable interest. ind vector integers (1 number folds inclusive) indicating testing set sample belong . centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/AUPECcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"list contains following items: aupec estimated AUPEC. sd estimated standard deviation AUPEC.","code":""},{"path":"/reference/AUPECcv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/AUPECcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/AUPECcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Area Under Prescription Evaluation Curve (AUPEC) in Randomized Experiments Under Cross Validation — AUPECcv","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = matrix(c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,-0.5,-0.3,-0.1,0.1,0.3,0.5,0.7,0.9),nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) aupeclist <- AUPECcv(T, tau, Y, ind) aupeclist$aupec #> [1] -1.171875 aupeclist$sd #> [1] 1.507292"},{"path":"/reference/compute_qoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) — compute_qoi","title":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) — compute_qoi","text":"Compute Quantities Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv)","code":""},{"path":"/reference/compute_qoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) — compute_qoi","text":"","code":"compute_qoi(fit_obj, algorithms)"},{"path":"/reference/compute_qoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) — compute_qoi","text":"fit_obj output object fit_itr function. algorithms Machine learning algorithms","code":""},{"path":"/reference/compute_qoi_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) with user defined functions — compute_qoi_user","title":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) with user defined functions — compute_qoi_user","text":"Compute Quantities Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) user defined functions","code":""},{"path":"/reference/compute_qoi_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) with user defined functions — compute_qoi_user","text":"","code":"compute_qoi_user(user_itr, Tcv, Ycv, data, ngates, budget, ...)"},{"path":"/reference/compute_qoi_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Quantities of Interest (PAPE, PAPEp, PAPDp, AUPEC, GATE, GATEcv) with user defined functions — compute_qoi_user","text":"user_itr user-defined function create ITR. function take data input return unit-level continuous score treatment assignment. assume score less 0 treatment. default NULL, means ITR estimated estimate_itr. Tcv vector unit-level binary treatment. Ycv vector unit-level continuous outcome. data data frame containing variables interest. ngates number gates used GATE function. budget maximum percentage population can treated budget constraint. ... Additional arguments passed user-defined function.","code":""},{"path":"/reference/consist.test.html","id":null,"dir":"Reference","previous_headings":"","what":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"function calculates statistics related test treatment effect consistency across groups.","code":""},{"path":"/reference/consist.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"","code":"consist.test(T, tau, Y, ngates = 5, nsim = 10000)"},{"path":"/reference/consist.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"T vector unit-level binary treatment receipt variable sample. tau vector unit-level continuous score. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. ngates number groups separate data . groups determined tau. Default 5. nsim Number Monte Carlo simulations used simulate null distributions. Default 10000.","code":""},{"path":"/reference/consist.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"list contains following items: stat estimated statistic test consistency pval p-value null hypothesis (treatment effects consistent)","code":""},{"path":"/reference/consist.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"details methods design given Imai Li (2022).","code":""},{"path":"/reference/consist.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"Imai Li (2022). “Statistical Inference Heterogeneous Treatment Effects Discovered Generic Machine Learning Randomized Experiments”,","code":""},{"path":"/reference/consist.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/consist.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — consist.test","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7) Y = c(4,5,0,2,4,1,-4,3) consisttestlist <- consist.test(T,tau,Y,ngates=5) consisttestlist$stat #> [1] 0.01949332 consisttestlist$pval #> [1] 0.6853"},{"path":"/reference/consistcv.test.html","id":null,"dir":"Reference","previous_headings":"","what":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"function calculates statistics related test treatment effect consistency across groups cross-validation.","code":""},{"path":"/reference/consistcv.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"","code":"consistcv.test(T, tau, Y, ind, ngates = 5, nsim = 10000)"},{"path":"/reference/consistcv.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"T vector unit-level binary treatment receipt variable sample. tau vector unit-level continuous score. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. ind vector integers (1 number folds inclusive) indicating testing set sample belong . ngates number groups separate data . groups determined tau. Default 5. nsim Number Monte Carlo simulations used simulate null distributions. Default 10000.","code":""},{"path":"/reference/consistcv.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"list contains following items: stat estimated statistic test consistency cross-validation. pval p-value null hypothesis (treatment effects consistent)","code":""},{"path":"/reference/consistcv.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"details methods design given Imai Li (2022).","code":""},{"path":"/reference/consistcv.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"Imai Li (2022). “Statistical Inference Heterogeneous Treatment Effects Discovered Generic Machine Learning Randomized Experiments”,","code":""},{"path":"/reference/consistcv.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/consistcv.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Consistency Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — consistcv.test","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = matrix(c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,-0.5,-0.3,-0.1,0.1,0.3,0.5,0.7,0.9),nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) consisttestlist <- consistcv.test(T,tau,Y,ind,ngates=2) consisttestlist$stat #> [1] 1.412451 consisttestlist$pval #> [1] 0.1209"},{"path":"/reference/create_ml_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Create general arguments — create_ml_args","title":"Create general arguments — create_ml_args","text":"Create general arguments","code":""},{"path":"/reference/create_ml_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create general arguments — create_ml_args","text":"","code":"create_ml_args(data)"},{"path":"/reference/create_ml_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create general arguments — create_ml_args","text":"data dataset","code":""},{"path":"/reference/create_ml_args_bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for bartMachine — create_ml_args_bart","title":"Create arguments for bartMachine — create_ml_args_bart","text":"Create arguments bartMachine","code":""},{"path":"/reference/create_ml_args_bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for bartMachine — create_ml_args_bart","text":"","code":"create_ml_args_bart(data)"},{"path":"/reference/create_ml_args_bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for bartMachine — create_ml_args_bart","text":"data dataset","code":""},{"path":"/reference/create_ml_args_bartc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for bartCause — create_ml_args_bartc","title":"Create arguments for bartCause — create_ml_args_bartc","text":"Create arguments bartCause","code":""},{"path":"/reference/create_ml_args_bartc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for bartCause — create_ml_args_bartc","text":"","code":"create_ml_args_bartc(data)"},{"path":"/reference/create_ml_args_bartc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for bartCause — create_ml_args_bartc","text":"data dataset","code":""},{"path":"/reference/create_ml_args_causalforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for causal forest — create_ml_args_causalforest","title":"Create arguments for causal forest — create_ml_args_causalforest","text":"Create arguments causal forest","code":""},{"path":"/reference/create_ml_args_causalforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for causal forest — create_ml_args_causalforest","text":"","code":"create_ml_args_causalforest(data)"},{"path":"/reference/create_ml_args_causalforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for causal forest — create_ml_args_causalforest","text":"data dataset","code":""},{"path":"/reference/create_ml_args_lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for LASSO — create_ml_args_lasso","title":"Create arguments for LASSO — create_ml_args_lasso","text":"Create arguments LASSO","code":""},{"path":"/reference/create_ml_args_lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for LASSO — create_ml_args_lasso","text":"","code":"create_ml_args_lasso(data)"},{"path":"/reference/create_ml_args_lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for LASSO — create_ml_args_lasso","text":"data dataset","code":""},{"path":"/reference/create_ml_args_superLearner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for super learner — create_ml_args_superLearner","title":"Create arguments for super learner — create_ml_args_superLearner","text":"Create arguments super learner","code":""},{"path":"/reference/create_ml_args_superLearner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for super learner — create_ml_args_superLearner","text":"","code":"create_ml_args_superLearner(data)"},{"path":"/reference/create_ml_args_superLearner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for super learner — create_ml_args_superLearner","text":"data dataset","code":""},{"path":"/reference/create_ml_args_svm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for SVM — create_ml_args_svm","title":"Create arguments for SVM — create_ml_args_svm","text":"Create arguments SVM","code":""},{"path":"/reference/create_ml_args_svm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for SVM — create_ml_args_svm","text":"","code":"create_ml_args_svm(data)"},{"path":"/reference/create_ml_args_svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for SVM — create_ml_args_svm","text":"data dataset","code":""},{"path":"/reference/create_ml_args_svm_cls.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for SVM classification — create_ml_args_svm_cls","title":"Create arguments for SVM classification — create_ml_args_svm_cls","text":"Create arguments SVM classification","code":""},{"path":"/reference/create_ml_args_svm_cls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for SVM classification — create_ml_args_svm_cls","text":"","code":"create_ml_args_svm_cls(data)"},{"path":"/reference/create_ml_args_svm_cls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for SVM classification — create_ml_args_svm_cls","text":"data dataset","code":""},{"path":"/reference/create_ml_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create arguments for ML algorithms — create_ml_arguments","title":"Create arguments for ML algorithms — create_ml_arguments","text":"Create arguments ML algorithms","code":""},{"path":"/reference/create_ml_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create arguments for ML algorithms — create_ml_arguments","text":"","code":"create_ml_arguments(outcome, treatment, data)"},{"path":"/reference/create_ml_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create arguments for ML algorithms — create_ml_arguments","text":"outcome Outcome interests treatment Treatment variable data dataset","code":""},{"path":"/reference/estimate_itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate individual treatment rules (ITR) — estimate_itr","title":"Estimate individual treatment rules (ITR) — estimate_itr","text":"Estimate individual treatment rules (ITR)","code":""},{"path":"/reference/estimate_itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate individual treatment rules (ITR) — estimate_itr","text":"","code":"estimate_itr(   treatment,   form,   data,   algorithms,   budget,   n_folds = 5,   split_ratio = 0,   ngates = 5,   preProcess = NULL,   weights = NULL,   trControl = caret::trainControl(method = \"none\"),   tuneGrid = NULL,   tuneLength = ifelse(trControl$method == \"none\", 1, 3),   user_model = NULL,   SL_library = NULL,   ... )"},{"path":"/reference/estimate_itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate individual treatment rules (ITR) — estimate_itr","text":"treatment Treatment variable form formula object takes form y ~ T + x1 + x2 + .... data data frame contains outcome y treatment T. algorithms List machine learning algorithms used. budget maximum percentage population can treated budget constraint. n_folds Number cross-validation folds. Default 5. split_ratio Split ratio train test set sample splitting. Default 0. ngates number groups separate data . groups determined tau. Default 5. preProcess caret parameter weights caret parameter trControl caret parameter tuneGrid caret parameter tuneLength caret parameter user_model user-defined function create ITR. function take data input return model estimate ITR. SL_library list machine learning algorithms used super learner. ... Additional arguments passed caret::train","code":""},{"path":"/reference/estimate_itr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate individual treatment rules (ITR) — estimate_itr","text":"object itr class","code":""},{"path":"/reference/evaluate_itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate ITR — evaluate_itr","title":"Evaluate ITR — evaluate_itr","text":"Evaluate ITR","code":""},{"path":"/reference/evaluate_itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate ITR — evaluate_itr","text":"","code":"evaluate_itr(   fit = NULL,   user_itr = NULL,   outcome = c(),   treatment = c(),   data = list(),   budget = 1,   ngates = 5,   ... )"},{"path":"/reference/evaluate_itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate ITR — evaluate_itr","text":"fit Fitted model. Usually output estimate_itr user_itr user-defined function create ITR. function take data input return unit-level continuous score treatment assignment. assume score less 0 treatment. default NULL, means ITR estimated estimate_itr. outcome character string outcome variable name. treatment character string treatment variable name. data data frame containing variables specified outcome, treatment, tau. budget maximum percentage population can treated budget constraint. ngates number gates use ITR. default 5. user-defined function create ITR. function take data input return ITR. output vector unit-level binary treatment assigned individualized treatment rule. default NULL, means ITR estimated estimate_itr. See ?evaluate_itr example. ... arguments passed function.","code":""},{"path":"/reference/evaluate_itr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate ITR — evaluate_itr","text":"object itr class","code":""},{"path":"/reference/fit_itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate ITR for Single Outcome — fit_itr","title":"Estimate ITR for Single Outcome — fit_itr","text":"Estimate ITR Single Outcome","code":""},{"path":"/reference/fit_itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate ITR for Single Outcome — fit_itr","text":"","code":"fit_itr(data, algorithms, params, folds, budget, user_model, ...)"},{"path":"/reference/fit_itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate ITR for Single Outcome — fit_itr","text":"data dataset. algorithms Machine learning algorithms. params list parameters. folds Number folds. budget maximum percentage population can treated budget constraint. user_model User's function estimated ITR. ... Additional arguments passed caret::train","code":""},{"path":"/reference/fit_itr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate ITR for Single Outcome — fit_itr","text":"list estimates.","code":""},{"path":"/reference/GATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"function estimates Grouped Average Treatment Effects (GATEs) groups determined continuous score. details methods design given Imai Li (2022).","code":""},{"path":"/reference/GATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"","code":"GATE(T, tau, Y, ngates = 5)"},{"path":"/reference/GATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"T vector unit-level binary treatment receipt variable sample. tau vector unit-level continuous score. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. ngates number groups separate data . groups determined tau. Default 5.","code":""},{"path":"/reference/GATE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"list contains following items: gate estimated vector GATEs length ngates arranged order increasing tau. sd estimated vector standard deviation GATEs.","code":""},{"path":"/reference/GATE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"Imai Li (2022). “Statistical Inference Heterogeneous Treatment Effects Discovered Generic Machine Learning Randomized Experiments”,","code":""},{"path":"/reference/GATE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/GATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments — GATE","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7) Y = c(4,5,0,2,4,1,-4,3) gatelist <- GATE(T,tau,Y,ngates=5) gatelist$gate #> [1] -1.25 -2.50  3.75 -5.00 -3.75 gatelist$sd #> [1] 7.968128 1.991051 4.628136       NA       NA"},{"path":"/reference/GATEcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"function estimates Grouped Average Treatment Effects (GATEs) cross-validation groups determined continuous score. details methods design given Imai Li (2022).","code":""},{"path":"/reference/GATEcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"","code":"GATEcv(T, tau, Y, ind, ngates = 5)"},{"path":"/reference/GATEcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"T vector unit-level binary treatment receipt variable sample. tau matrix ith column unit-level continuous score treatment assignment generated ith fold. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. ind vector integers (1 number folds inclusive) indicating testing set sample belong . ngates number groups separate data . groups determined tau. Default 5.","code":""},{"path":"/reference/GATEcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"list contains following items: gate estimated vector GATEs cross-validation length ngates arranged order increasing tau. sd estimated vector standard deviation GATEs cross-validation.","code":""},{"path":"/reference/GATEcv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"Imai Li (2022). “Statistical Inference Heterogeneous Treatment Effects Discovered Generic Machine Learning Randomized Experiments”,","code":""},{"path":"/reference/GATEcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/GATEcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Grouped Average Treatment Effects (GATEs) in Randomized Experiments Under Cross Validation — GATEcv","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = matrix(c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,-0.5,-0.3,-0.1,0.1,0.3,0.5,0.7,0.9),nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) gatelist <- GATEcv(T, tau, Y, ind, ngates = 2) gatelist$gate #> [1]  1.0 -4.5 gatelist$sd #> [1] 4.881940 3.452053"},{"path":"/reference/het.test.html","id":null,"dir":"Reference","previous_headings":"","what":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"function calculates statistics related test heterogeneous treatment effects across groups.","code":""},{"path":"/reference/het.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"","code":"het.test(T, tau, Y, ngates = 5)"},{"path":"/reference/het.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"T vector unit-level binary treatment receipt variable sample. tau vector unit-level continuous score. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. ngates number groups separate data . groups determined tau. Default 5.","code":""},{"path":"/reference/het.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"list contains following items: stat estimated statistic test heterogeneity. pval p-value null hypothesis (treatment effects homogeneous)","code":""},{"path":"/reference/het.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"details methods design given Imai Li (2022).","code":""},{"path":"/reference/het.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"Imai Li (2022). “Statistical Inference Heterogeneous Treatment Effects Discovered Generic Machine Learning Randomized Experiments”,","code":""},{"path":"/reference/het.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/het.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) in Randomized Experiments — het.test","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7) Y = c(4,5,0,2,4,1,-4,3) hettestlist <- het.test(T,tau,Y,ngates=5) hettestlist$stat #> [1] NA hettestlist$pval #> [1] NA"},{"path":"/reference/hetcv.test.html","id":null,"dir":"Reference","previous_headings":"","what":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"function calculates statistics related test heterogeneous treatment effects across groups cross-validation.","code":""},{"path":"/reference/hetcv.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"","code":"hetcv.test(T, tau, Y, ind, ngates = 5)"},{"path":"/reference/hetcv.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"T vector unit-level binary treatment receipt variable sample. tau vector unit-level continuous score. Conditional Average Treatment Effect one possible measure. Y vector outcome variable interest sample. ind vector integers (1 number folds inclusive) indicating testing set sample belong . ngates number groups separate data . groups determined tau. Default 5.","code":""},{"path":"/reference/hetcv.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"list contains following items: stat estimated statistic test heterogeneity cross-validation. pval p-value null hypothesis (treatment effects homogeneous)","code":""},{"path":"/reference/hetcv.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"details methods design given Imai Li (2022).","code":""},{"path":"/reference/hetcv.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"Imai Li (2022). “Statistical Inference Heterogeneous Treatment Effects Discovered Generic Machine Learning Randomized Experiments”,","code":""},{"path":"/reference/hetcv.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/hetcv.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Heterogeneity Test for Grouped Average Treatment Effects (GATEs) under Cross Validation in Randomized Experiments — hetcv.test","text":"","code":"T = c(1,0,1,0,1,0,1,0) tau = matrix(c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,-0.5,-0.3,-0.1,0.1,0.3,0.5,0.7,0.9),nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) hettestlist <- hetcv.test(T,tau,Y,ind,ngates=2) hettestlist$stat #>           [,1] #> [1,] 0.5752071 hettestlist$pval #>           [,1] #> [1,] 0.7500589"},{"path":"/reference/itr_single_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate ITR for Single Outcome — itr_single_outcome","title":"Evaluate ITR for Single Outcome — itr_single_outcome","text":"Evaluate ITR Single Outcome","code":""},{"path":"/reference/itr_single_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate ITR for Single Outcome — itr_single_outcome","text":"","code":"itr_single_outcome(data, algorithms, params, folds, budget, user_model, ...)"},{"path":"/reference/itr_single_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate ITR for Single Outcome — itr_single_outcome","text":"data dataset. algorithms Machine learning algorithms. params list parameters. folds Number folds. budget maximum percentage population can treated budget constraint. user_model User's function estimated ITR. ... Additional arguments passed caret::train","code":""},{"path":"/reference/itr_single_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate ITR for Single Outcome — itr_single_outcome","text":"list estimates.","code":""},{"path":"/reference/PAPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"function estimates Population Average Prescription Difference budget constraint. details methods design given Imai Li (2019).","code":""},{"path":"/reference/PAPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"","code":"PAPD(T, Thatfp, Thatgp, Y, budget, centered = TRUE)"},{"path":"/reference/PAPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"T vector unit-level binary treatment receipt variable sample. Thatfp vector unit-level binary treatment assigned first individualized treatment rule. Please ensure percentage treatment units lower budget constraint. Thatgp vector unit-level binary treatment assigned second individualized treatment rule. Please ensure percentage treatment units lower budget constraint. Y vector outcome variable interest sample. budget maximum percentage population can treated budget constraint. decimal 0 1. centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/PAPD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"list contains following items: papd estimated Population Average Prescription Difference sd estimated standard deviation PAPD.","code":""},{"path":"/reference/PAPD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/PAPD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/PAPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments — PAPD","text":"","code":"T = c(1,0,1,0,1,0,1,0) That = c(0,1,1,0,0,1,1,0) That2 = c(1,0,0,1,1,0,0,1) Y = c(4,5,0,2,4,1,-4,3) papdlist <- PAPD(T,That,That2,Y,budget = 0.5) papdlist$papd #> [1] -3.25 papdlist$sd #> [1] 1.203294"},{"path":"/reference/PAPDcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"function estimates Population Average Prescription Difference budget constaint cross validation. details methods design given Imai Li (2019).","code":""},{"path":"/reference/PAPDcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"","code":"PAPDcv(T, Thatfp, Thatgp, Y, ind, budget, centered = TRUE)"},{"path":"/reference/PAPDcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"T vector unit-level binary treatment receipt variable sample. Thatfp matrix ith column unit-level binary treatment assigned first individualized treatment rule generated ith fold. Please ensure percentage treatment units lower budget constraint. Thatgp matrix ith column unit-level binary treatment assigned second individualized treatment rule generated ith fold. Please ensure percentage treatment units lower budget constraint. Y outcome variable interest. ind vector integers (1 number folds inclusive) indicating testing set sample belong . budget maximum percentage population can treated budget constraint. decimal 0 1. centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/PAPDcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"list contains following items: papd estimated Population Average Prescription Difference. sd estimated standard deviation PAPD.","code":""},{"path":"/reference/PAPDcv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/PAPDcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/PAPDcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Population Average Prescription Difference in Randomized Experiments Under Cross Validation — PAPDcv","text":"","code":"T = c(1,0,1,0,1,0,1,0) That = matrix(c(0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1), nrow = 8, ncol = 2) That2 = matrix(c(0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,0), nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) papdlist <- PAPDcv(T, That, That2, Y, ind, budget = 0.5) papdlist$papd #> [1] -1.25 papdlist$sd #> [1] 1.038328"},{"path":"/reference/PAPE.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"function estimates Population Average Prescription Effect without budget constraint. details methods design given Imai Li (2019).","code":""},{"path":"/reference/PAPE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"","code":"PAPE(T, That, Y, budget = NA, centered = TRUE)"},{"path":"/reference/PAPE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"T vector unit-level binary treatment receipt variable sample. vector unit-level binary treatment assigned individualized treatment rule. budget specified, please ensure percentage treatment units lower budget constraint. Y vector outcome variable interest sample. budget maximum percentage population can treated budget constraint. decimal 0 1. Default NA assumes budget constraint. centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/PAPE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"list contains following items: pape estimated Population Average Prescription Effect. sd estimated standard deviation PAPE.","code":""},{"path":"/reference/PAPE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/PAPE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/PAPE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments — PAPE","text":"","code":"T = c(1,0,1,0,1,0,1,0) That = c(0,1,1,0,0,1,1,0) Y = c(4,5,0,2,4,1,-4,3) papelist <- PAPE(T,That,Y) papelist$pape #> [1] -1.857143 papelist$sd #> [1] 0.7490218"},{"path":"/reference/PAPEcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"function estimates Population Average Prescription Effect without budget constraint. details methods design given Imai Li (2019).","code":""},{"path":"/reference/PAPEcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"","code":"PAPEcv(T, That, Y, ind, budget = NA, centered = TRUE)"},{"path":"/reference/PAPEcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"T vector unit-level binary treatment receipt variable sample. matrix ith column unit-level binary treatment assigned individualized treatment rule generated ith fold. budget specified, please ensure percentage treatment units lower budget constraint. Y outcome variable interest. ind vector integers (1 number folds inclusive) indicating testing set sample belong . budget maximum percentage population can treated budget constraint. decimal 0 1. Default NA assumes budget constraint. centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/PAPEcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"list contains following items: pape estimated Population Average Prescription Effect. sd estimated standard deviation PAPE.","code":""},{"path":"/reference/PAPEcv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/PAPEcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/PAPEcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Population Average Prescription Effect in Randomized Experiments Under Cross Validation — PAPEcv","text":"","code":"T = c(1,0,1,0,1,0,1,0) That = matrix(c(0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1), nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) papelist <- PAPEcv(T, That, Y, ind) papelist$pape #> [1] -0.1666667 papelist$sd #> [1] 1.326843"},{"path":"/reference/PAV.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Population Average Value in Randomized Experiments — PAV","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"function estimates Population Average Value. details methods design given Imai Li (2019).","code":""},{"path":"/reference/PAV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"","code":"PAV(T, That, Y, centered = TRUE)"},{"path":"/reference/PAV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"T vector unit-level binary treatment receipt variable sample. vector unit-level binary treatment assigned individualized treatment rule. budget specified, please ensure percentage treatment units lower budget constraint. Y vector outcome variable interest sample. centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/PAV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"list contains following items: pav estimated Population Average Value. sd estimated standard deviation PAV.","code":""},{"path":"/reference/PAV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/PAV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/PAV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Population Average Value in Randomized Experiments — PAV","text":"","code":"T = c(1,0,1,0,1,0,1,0) That = c(0,1,1,0,0,1,1,0) Y = c(4,5,0,2,4,1,-4,3) pavlist <- PAV(T,That,Y) pavlist$pav #> [1] -1.625 pavlist$sd #> [1] 1.411449"},{"path":"/reference/PAVcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"function estimates Population Average Value. details methods design given Imai Li (2019).","code":""},{"path":"/reference/PAVcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"","code":"PAVcv(T, That, Y, ind, centered = TRUE)"},{"path":"/reference/PAVcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"T vector unit-level binary treatment receipt variable sample. matrix ith column unit-level binary treatment assigned individualized treatment rule generated ith fold. budget specified, please ensure percentage treatment units lower budget constraint. Y outcome variable interest. ind vector integers (1 number folds inclusive) indicating testing set sample belong . centered TRUE, outcome variables centered processing. minimizes variance estimator. Default TRUE.","code":""},{"path":"/reference/PAVcv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"list contains following items: pav estimated Population Average Value. sd estimated standard deviation PAV.","code":""},{"path":"/reference/PAVcv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"Imai Li (2019). “Experimental Evaluation Individualized Treatment Rules”,","code":""},{"path":"/reference/PAVcv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"Michael Lingzhi Li, Technology Operations Management, Harvard Business School mili@hbs.edu, https://www.michaellz.com/;","code":""},{"path":"/reference/PAVcv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Population Average Value in Randomized Experiments Under Cross Validation — PAVcv","text":"","code":"T = c(1,0,1,0,1,0,1,0) That = matrix(c(0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,1), nrow = 8, ncol = 2) Y = c(4,5,0,2,4,1,-4,3) ind = c(rep(1,4),rep(2,4)) pavlist <- PAVcv(T, That, Y, ind) pavlist$pav #> [1] -0.125 pavlist$sd #> [1] 1.278834"},{"path":"/reference/plot.itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the AUPEC curve — plot.itr","title":"Plot the AUPEC curve — plot.itr","text":"Plot AUPEC curve","code":""},{"path":"/reference/plot.itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the AUPEC curve — plot.itr","text":"","code":"# S3 method for itr plot(x, ...)"},{"path":"/reference/plot.itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the AUPEC curve — plot.itr","text":"x object evaluate_itr() class. typically output evaluate_itr() function. ... arguments passed function.","code":""},{"path":"/reference/plot.itr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the AUPEC curve — plot.itr","text":"plot ggplot2 object.","code":""},{"path":"/reference/plot_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the GATE estimate — plot_estimate","title":"Plot the GATE estimate — plot_estimate","text":"Plot GATE estimate","code":""},{"path":"/reference/plot_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the GATE estimate — plot_estimate","text":"","code":"plot_estimate(x, type, ...)"},{"path":"/reference/plot_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the GATE estimate — plot_estimate","text":"x table object. typically output evaluate_itr() function. type metric wish plot. One GATE, PAPE, PAPEp, PAPDp. ... arguments passed function.","code":""},{"path":"/reference/plot_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the GATE estimate — plot_estimate","text":"plot ggplot2 object.","code":""},{"path":"/reference/print.summary.itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print — print.summary.itr","title":"Print — print.summary.itr","text":"Print","code":""},{"path":"/reference/print.summary.itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print — print.summary.itr","text":"","code":"# S3 method for summary.itr print(x, ...)"},{"path":"/reference/print.summary.itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print — print.summary.itr","text":"x object summary.itr class. typically output summary.itr() function. ... parameters. Currently supported.","code":""},{"path":"/reference/print.summary.test_itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print — print.summary.test_itr","title":"Print — print.summary.test_itr","text":"Print","code":""},{"path":"/reference/print.summary.test_itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print — print.summary.test_itr","text":"","code":"# S3 method for summary.test_itr print(x, ...)"},{"path":"/reference/print.summary.test_itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print — print.summary.test_itr","text":"x object summary.test_itr class. typically output summary.test_itr() function. ... parameters.","code":""},{"path":"/reference/star.html","id":null,"dir":"Reference","previous_headings":"","what":"Tennessee’s Student/Teacher Achievement Ratio (STAR) project — star","title":"Tennessee’s Student/Teacher Achievement Ratio (STAR) project — star","text":"longitudinal study experimentally evaluating impacts class size early education various outcomes (Mosteller, 1995)","code":""},{"path":"/reference/star.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tennessee’s Student/Teacher Achievement Ratio (STAR) project — star","text":"","code":"star"},{"path":"/reference/star.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tennessee’s Student/Teacher Achievement Ratio (STAR) project — star","text":"data frame 1911 observations 14 variables: treatment binary treatment indicating whether student assigned small class regular class without aid g3tlangss continous variable measuring student's writing scores g3treadss continous variable measuring student's reading scores g3tmathss continous variable measuring student's math scores gender Students' gender race Students' race birthmonth Students' birth month birthyear Students' birth year SCHLURBN Urban rural GKENRMNT Enrollment size GRDRANGE Grade range GKFRLNCH Number students free lunch GKBUSED Number students school buses GKWHITE Percentage white students","code":""},{"path":"/reference/summary.itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize estimate_itr output — summary.itr","title":"Summarize estimate_itr output — summary.itr","text":"Summarize estimate_itr output","code":""},{"path":"/reference/summary.itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize estimate_itr output — summary.itr","text":"","code":"# S3 method for itr summary(object, ...)"},{"path":"/reference/summary.itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize estimate_itr output — summary.itr","text":"object object estimate_itr class (typically output estimate_itr() function). ... parameters.","code":""},{"path":"/reference/summary.test_itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize test_itr output — summary.test_itr","title":"Summarize test_itr output — summary.test_itr","text":"Summarize test_itr output","code":""},{"path":"/reference/summary.test_itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize test_itr output — summary.test_itr","text":"","code":"# S3 method for test_itr summary(object, ...)"},{"path":"/reference/summary.test_itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize test_itr output — summary.test_itr","text":"object object test_itr class (typically output test_itr() function). ... parameters.","code":""},{"path":"/reference/test_itr.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct hypothesis tests — test_itr","title":"Conduct hypothesis tests — test_itr","text":"Conduct hypothesis tests","code":""},{"path":"/reference/test_itr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct hypothesis tests — test_itr","text":"","code":"test_itr(fit, nsim = 1000, ...)"},{"path":"/reference/test_itr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct hypothesis tests — test_itr","text":"fit Fitted model. Usually output estimate_itr nsim Number Monte Carlo simulations used simulate null distributions. Default 1000. ... arguments passed function.","code":""},{"path":"/reference/test_itr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct hypothesis tests — test_itr","text":"object test_itr class","code":""},{"path":"/news/index.html","id":"evalitr-100","dir":"Changelog","previous_headings":"","what":"evalITR 1.0.0","title":"evalITR 1.0.0","text":"Revamped package structure Introduced high-level function estimate_itr() provide easy process train evaluate individualized treatment rules. Added support automatic training many machine learning algorithms including Caret, Superlearner, BART, Causal Forests. Provided plotting tools automatically creates beautiful plots evaluation metrics Changed output structure provide detailed information evaluation metrics confidence intervals, integrates summary() function.","code":""},{"path":"/news/index.html","id":"evalitr-030","dir":"Changelog","previous_headings":"","what":"evalITR 0.3.0","title":"evalITR 0.3.0","text":"CRAN release: 2022-03-29 Added NEWS.md file track changes package.","code":""}]
